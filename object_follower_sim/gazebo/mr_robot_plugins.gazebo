<?xml version="1.0" ?>
<robot name="mr_robot" xmlns:xacro="http://www.ros.org/wiki/xacro" >


	<gazebo>
    	<plugin name='gz::sim::systems::DiffDrive' 
			filename='gz-sim-diff-drive-system'>
    	  <left_joint>left_motor_joint</left_joint>
    	  <right_joint>right_motor_joint</right_joint>
    	  <wheel_separation>0.199</wheel_separation>
    	  <wheel_radius>0.535</wheel_radius>
    	  <odom_publish_frequency>1</odom_publish_frequency>
    	  <max_linear_acceleration>1</max_linear_acceleration>
    	  <min_linear_acceleration>-1</min_linear_acceleration>
    	  <max_angular_acceleration>2</max_angular_acceleration>
    	  <min_angular_acceleration>-2</min_angular_acceleration>
    	  <max_linear_velocity>0.5</max_linear_velocity>
    	  <min_linear_velocity>-0.5</min_linear_velocity>
    	  <max_angular_velocity>1</max_angular_velocity>
    	  <min_angular_velocity>-1</min_angular_velocity>
    	</plugin>
	</gazebo>

	<gazebo>
		<plugin name='gz::sim::systems::JointStatePublisher' 
			filename='libgz-sim-joint-state-publisher-system.so'/>
	</gazebo>

	<gazebo reference="lidar_1">
		<sensor name='front_rplidar' type='gpu_lidar'>
        <topic>lidar</topic>
		<visualize>false</visualize>
        <pose>-0.064 0 0.121 0 0 0</pose>
        <always_on>1</always_on>
        <update_rate>10</update_rate>
        <ray>
          <scan>
			<horizontal>
			  <samples>360</samples>
			  <resolution>1.000000</resolution>
			  <min_angle>0.000000</min_angle>
			  <max_angle>6.280000</max_angle>
			</horizontal>
          </scan>
          <range>
			<min>0.120000</min>
			<max>6</max>
			<resolution>0.015000</resolution>
          </range>
		  <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
      </sensor>
	</gazebo>

<!--
	<gazebo reference="imu_link">
		<sensor name="tb3_imu" type="imu">
			<always_on>true</always_on>
			<update_rate>200</update_rate>
			<imu>
			  <angular_velocity>
				<x>
				  <noise type="gaussian">
					<mean>0.0</mean>
					<stddev>2e-4</stddev>
				  </noise>
				</x>
				<y>
				  <noise type="gaussian">
					<mean>0.0</mean>
					<stddev>2e-4</stddev>
				  </noise>
				</y>
				<z>
				  <noise type="gaussian">
					<mean>0.0</mean>
					<stddev>2e-4</stddev>
				  </noise>
				</z>
			  </angular_velocity>
			  <linear_acceleration>
				<x>
				  <noise type="gaussian">
					<mean>0.0</mean>
					<stddev>1.7e-2</stddev>
				  </noise>
				</x>
				<y>
				  <noise type="gaussian">
					<mean>0.0</mean>
					<stddev>1.7e-2</stddev>
				  </noise>
				</y>
				<z>
				  <noise type="gaussian">
					<mean>0.0</mean>
					<stddev>1.7e-2</stddev>
				  </noise>
				</z>
			  </linear_acceleration>
			</imu>
			<plugin name="turtlebot3_imu" filename="libgazebo_ros_imu_sensor.so">
			  <ros>
				<namespace>/tb3</namespace> 
				<remapping>~/out:=imu</remapping>
			  </ros>
			</plugin>
		  </sensor>
	</gazebo>



	<gazebo reference="realsense_camera">
		<sensor name="camera" type="depth">
			<always_on>true</always_on>
			<visualize>true</visualize>
			<update_rate>30</update_rate>
			<camera name="intel_realsense_r200">
			  <horizontal_fov>1.02974</horizontal_fov>
			  <image>
				<width>1920</width>
				<height>1080</height>
				<format>R8G8B8</format>
			  </image>
			  <clip>
				<near>0.02</near>
				<far>300</far>
			  </clip>
			  <noise>
				<type>gaussian</type>
				<mean>0.0</mean>
				<stddev>0.007</stddev>
			  </noise>
			  <distortion>
				<k1>0.1</k1>
				<k2>0.2</k2>
				<k3>0.3</k3>
				<p1>0.4</p1>
				<p2>0.5</p2>
				<center>0.5 0.5</center>
			  </distortion>
			</camera>
			  <plugin name="camera_driver" filename="libgazebo_ros_camera.so">
				<ros>
				   <namespace>test_cam</namespace> 
				   <argument>image_raw:=image_demo</argument> 
				   <argument>camera_info:=camera_info_demo</argument> 
				</ros>
				 camera_name>omit so it defaults to sensor name</camera_name
				 frame_name>omit so it defaults to link name</frameName
				<hack_baseline>0.07</hack_baseline>
				<min_depth>0.001</min_depth>
				<max_depth>300.0</max_depth>
			  </plugin>
		  </sensor>
	  </gazebo>
	-->

</robot>
